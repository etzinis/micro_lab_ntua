
READ MACRO							
  MOV AH,08H
  INT 21H
ENDM

PRINT MACRO CHAR                    ;PRINT A CHAR USING ITS ASCII VALUE
  PUSH AX
  PUSH DX
  MOV DL,CHAR
  MOV AH,02H
  INT 21H
  POP DX
  POP AX
ENDM

PRINT_STR MACRO STRING				;PRINT STRING - WE USE IT TO PRINT NEWLINE
  PUSH AX
  PUSH DX
  MOV DX, OFFSET STRING
  MOV AH, 09H
  INT 21H
  POP DX
  POP AX
ENDM


PRINT_HEX MACRO HEX
	LOCAL THOUS,THOUS_OK,NEXT1,NEXT2,NEXT3,NUMBERS,NUMBERS1,NUMBERS2,NUMBERS3,FINAL,DEC_OK,HUN_OK,CDEC,CHUNDR
	
	PUSH AX								;KEEP NECESSARY REGS AND VARS IN STACK
	PUSH DX
	PUSH HEX
		
    MOV AH,02H
	MOV DX,0
	
	CMP HEX,1000H						;I OMIT THE FIRST '0'
	JL CHUNDR
THOUS:									;COUNT THE NUMBER OF 1000Hs
	CMP HEX,1000H
	JL THOUS_OK
	INC DX
	SUB HEX,1000H
	JMP THOUS
THOUS_OK:							    ;DONE WITH COUNTING
	CMP DL,0AH
	JL NUMBERS							
	ADD DL,37H							;PRINT A-F HERE
	INT 21H
	MOV DX,0
	JMP NEXT1
NUMBERS:								;PRINT THE NUMBERS HERE
	ADD DL,30H
	INT 21H
	MOV DX,0
	JMP NEXT1
	
CHUNDR:									;I OMIT THE SECOND '0'
	CMP HEX,100H
	JL CDEC
NEXT1:									;COUNT THE NUMBER OF 100Hs 
	CMP HEX,100H
    JL HUN_OK
	INC DX
	SUB HEX,100H
	JMP NEXT1
HUN_OK:									;DONE WITH COUNTING
	CMP DL,0AH
	JL NUMBERS1
	ADD DL,37H
	INT 21H								;PRINT DIGITS AND LETTERS SEPERATELY
	MOV DX,0							;LIKE ABOVE
	JMP NEXT2
NUMBERS1:
	ADD DL,30H
	INT 21H
	MOV DX,0
	JMP NEXT2

CDEC:									;I OMMIT THE THID '0'
	CMP HEX,10H
	JL NEXT3
NEXT2:									;COUNT THE NUMBER OF 10Hs
	CMP HEX,10H
	JL DEC_OK
	INC DX
	SUB HEX,10H
	JMP NEXT2
DEC_OK:
	CMP DL,0AH
	JL NUMBERS2
	ADD DL,37H
	INT 21H
	MOV DX,0
	JMP NEXT3
NUMBERS2:
	ADD DL,30H
	INT 21H
	MOV DX,0
	
NEXT3:								  ;PRINT THE 10Hs
	CMP HEX,09H
	JL NUMBERS3
	ADD HEX,37H
	JMP FINAL
NUMBERS3:
	ADD HEX,30H	
FINAL:
	MOV DX,HEX
	INT 21H
	
	POP HEX
	POP DX
	POP AX
ENDM



PRINT_DEC MACRO NUM
	LOCAL THOUS,THOUS_OK,HUNDR,HUNDR_OK,DEC,DEC_OK,CHUNDR,CDEC,FINAL

	PUSH AX					;KEEP NECESSARY REGS AND VARS IN STACK
	PUSH DX
	PUSH NUM
	
	MOV AH,02H
	MOV DX,00H
	
	CMP NUM,03E8H            ;COMPARE WITH 1000 DEC
	JL CHUNDR				 ;IF LESS THAN 1000, OMIT THE FIRST '0'
THOUS:						 ;COUNT THE NUMBER OF THOUSANDS
	CMP NUM,03E8H
	JL THOUS_OK
	INC DL
	SUB NUM,03E8H
	JMP THOUS
THOUS_OK:					;DONE WITH COUNTING THE THOUSANDS
	ADD DL,30H				;NOW PRINT 
	INT 21H
	MOV DL,00H
	JMP HUNDR
	
CHUNDR:
	CMP NUM,0064H			;OMIT THE SECOND '0'
	JL CDEC
HUNDR:						;COUNT HUNDREDS
	CMP NUM,0064H
	JL HUNDR_OK
	INC DL
	SUB NUM,0064H
	JMP HUNDR
HUNDR_OK:
	ADD DL,30H
	INT 21H
	MOV DL,00H
	JMP DEC

CDEC:
	CMP NUM,0AH
	JL FINAL
DEC:						;COUNT DECADES
	CMP NUM,000AH
	JL DEC_OK
	INC DL
	SUB NUM,000AH
	JMP DEC
DEC_OK:
	ADD DL,30H
	INT 21H
FINAL:	
	MOV DX,NUM
	ADD DL,30H
	INT 21H
	
	POP NUM
	POP DX
	POP AX
ENDM
